<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[turnr]]></title>
  <link href="http://tur-nr.github.io/atom.xml" rel="self"/>
  <link href="http://tur-nr.github.io/"/>
  <updated>2014-06-21T00:09:29+01:00</updated>
  <id>http://tur-nr.github.io/</id>
  <author>
    <name><![CDATA[Christopher Turner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clever way of extract URL information in JS]]></title>
    <link href="http://tur-nr.github.io/blog/2014/06/20/clever-way-of-extract-url-information-in-js/"/>
    <updated>2014-06-20T23:50:15+01:00</updated>
    <id>http://tur-nr.github.io/blog/2014/06/20/clever-way-of-extract-url-information-in-js</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s a nice little way to extract URL information from a string. Rather than
trying to parse/split the string into its parts (protocol, host, path, query)
just use an <code>a</code> tag and access it&rsquo;s properties to get the relative information
you want.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">url</span>    <span class="o">=</span> <span class="s1">&#39;https://www.google.co.uk/search?q=hello&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">anchor</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">anchor</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">protocol</span> <span class="o">=</span> <span class="nx">anchor</span><span class="p">.</span><span class="nx">protocol</span><span class="p">;</span> <span class="c1">// &#39;https:&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">host</span>     <span class="o">=</span> <span class="nx">anchor</span><span class="p">.</span><span class="nx">hostname</span><span class="p">;</span> <span class="c1">// &#39;google.com&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">path</span>     <span class="o">=</span> <span class="nx">anchor</span><span class="p">.</span><span class="nx">pathname</span><span class="p">;</span> <span class="c1">// &#39;/search&#39;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">query</span>    <span class="o">=</span> <span class="nx">anchor</span><span class="p">.</span><span class="nx">search</span><span class="p">;</span>   <span class="c1">// &#39;?q=hello&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Simples.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Top 10 Languages in 2014, so Lynda says]]></title>
    <link href="http://tur-nr.github.io/blog/2014/01/10/top-10-languages-in-2014/"/>
    <updated>2014-01-10T20:17:06+00:00</updated>
    <id>http://tur-nr.github.io/blog/2014/01/10/top-10-languages-in-2014</id>
    <content type="html"><![CDATA[<p><a href="http://lynda.com">Lynda.com</a> the online training site have published what they think are going be the top 10 languages to know this year. All your usual suspects are in there but what has suprised me is the order of the list. Is this is a list set by trends in 2013, if so it seems to be that Java is still considered cool.</p>

<p>Have a look and see what you think?</p>

<h4><a href="http://www.slideshare.net/lyndadotcom/top-10-programming-languages-to-know-in-2014">Top 10 Programming Languages to know in 2014</a></h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye Php, hello Node.js!]]></title>
    <link href="http://tur-nr.github.io/blog/2014/01/08/goodbye-php-hello-node-js/"/>
    <updated>2014-01-08T23:37:24+00:00</updated>
    <id>http://tur-nr.github.io/blog/2014/01/08/goodbye-php-hello-node-js</id>
    <content type="html"><![CDATA[<h4>Summer 2013</h4>

<p>The start of summer &lsquo;13 saw a shift in my career. Near twelve years in the making to become a <a href="http://php.net" title="Php website">Php</a> developer, twelve years that started in my bedroom. From building bit torrent sites, practicing with the latest MVC frameworks, getting through several years of study and a few in the actual industry, I took a chance to become a ninja.</p>

<p>I&rsquo;ve done a bit of JavaScript, obviously being a web developer, but never really understood the language and it&rsquo;s nature. I never stopped to think about the simplicity of the prototypal inheritance it offers, or just how great closures are.</p>

<!-- more -->


<h4>Losing interest</h4>

<p>Developing with <a href="http://php.net" title="Php website">Php</a> unless you&rsquo;re creating frameworks, libraries or being part of a community I found had become stale. 9 times out of 10 a company will have their own framework which for as long as they are making money they&rsquo;re not going to pay you to change. Which had disheartened me a little as all that was left was configuration, form processing, chopping up HTML and populating a CMS. Not really the forefront of inovation.</p>

<h4>Hello, Node.js!</h4>

<p>I follow the movement of Web technologies religiously and one that was making alot of noise was <a href="http://nodejs.org" title="Node.js website">Node.js</a>. I know that server side JavaScript has been around since the 90s but it was in fact <a href="http://php.net" title="Php website">Php</a> that introduced me to it. When I was creating a simple CMS in <a href="http://symfony.com" title="Symfony website">Symfony2</a> I was using it&rsquo;s <a href="" title="Assetic Bundle repository">Assetic Bundle</a> for pre-compiling <a href="http://lesscss.org" title="Less website">Less</a>. Like any curious developer I wanted to know what to see how <a href="https://github.com/kriswallsmith" title="Kris' Github page">Kris Wallsmith</a> (author) had created such a bundle. Yep you guessed it, <a href="http://nodejs.org" title="Node.js website">Node.js</a>!</p>

<p>After playing with <a href="http://nodejs.org" title="Node.js website">Node.js</a> for the guts of a few months I slowly realised that I began to fall for its asynchronous environment. Writing web applications become faster, more modular and easier to understand. No more large frameworks with steap learning curves, just lots of small libraries combined that can be used, re-shaped and augmented. Between <a href="http://php.net" title="Php website">Php</a> and <a href="http://nodejs.org" title="Node.js website">Node.js</a> it was becoming a case of:</p>

<blockquote><p>Anything you can do I can do better,<br/>
I can do anything better than you.</p>

<p><em>Annie â€“ Annie Get Your Gun</em></p></blockquote>

<h4>New language, new career</h4>

<p>Over the past 6 months I&rsquo;ve been working with <a href="http://nodejs.org" title="Node.js website">Node.js</a> and within a team of JavaScript engineers creating libraries and frameworks on embedded systems. JavaScript in Belfast is now a high demand and I suspect it&rsquo;s not going to go down anytime soon. The switch in career has been a gamble that has paid off.</p>
]]></content>
  </entry>
  
</feed>
